name: Sandbox Build and Deploy
on:
  push:
    branches: 
      - "sandbox"

env: 
  VIRTUAL_HOST: live.membrane.ovh
  INTEGRATED_TURN_IP: 95.217.215.156
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  TAG: sandbox
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push latest version 
        id: docker_build_latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: VERSION= ${{ github.ref_name }}
          tags: membraneframeworklabs/membrane_live:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Prepare .env file for the deployment
        id: variables_population
        run: echo "VIRTUAL_HOST=$VIRTUAL_HOST \nINTEGRATED_TURN_IP=$INTEGRATED_TURN_IP \nPOSTGRES_PASSWORD=$POSTGRES_PASSWORD \nTAG=$TAG \nGOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" > .env

      - name: Deploy docker compose to a pre-configured server
        id: deploy
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: ${{ secrets.SANDBOX_HOST }}
          ssh_private_key: ${{ secrets.SSH_PRIV_KEY }}
          ssh_public_key: ${{ secrets.SSH_KNOWN_HOSTS}}
          stack_file_name: docker-compose.yml
          args: -p sandbox --env-file .env up -d --remove-orphans
